function AverageModelResults(baseDir)
    % Define the sets of files to process individually and their corresponding names
    setsToProcess = {
        {'Temp_Accuracy_PI_1.mat'}, 'Acc', 1; ...
        {'Temp_Deviation_PI_1.mat'}, 'Dev', 1; ...
        {'Temp_Accuracy_PI_2.mat'}, 'Acc', 2; ...
        {'Temp_Deviation_PI_2.mat'}, 'Dev', 2; ...
        {'Temp_Accuracy_PI_3.mat'}, 'Acc', 3; ...
        {'Temp_Deviation_PI_3.mat'}, 'Dev', 3; ...
        {'Temp_Accuracy_PI_4.mat'}, 'Acc', 4; ...
        {'Temp_Deviation_PI_4.mat'}, 'Dev', 4; ...
        {'Temp_Accuracy_PI_5.mat'}, 'Acc', 5; ...
        {'Temp_Deviation_PI_5.mat'}, 'Dev', 5; ...
        {'Temp_Accuracy_PI_6.mat'}, 'Acc', 6; ...
        {'Temp_Deviation_PI_6.mat'}, 'Dev', 6; ...
        {'Temp_Accuracy_PI_7.mat'}, 'Acc', 7; ...
        {'Temp_Deviation_PI_7.mat'}, 'Dev', 7; ...
        {'Temp_Accuracy_PI_8.mat'}, 'Acc', 8; ...
        {'Temp_Deviation_PI_8.mat'}, 'Dev', 8
    };
    
    % Process each set of files
    for i = 1:size(setsToProcess, 1)
        fileSet = setsToProcess{i, 1};
        type = setsToProcess{i, 2};
        index = setsToProcess{i, 3};
        
        % Load the file
        filePath = fullfile(baseDir, fileSet{1});
        fileData = load(filePath);
        dataField = fieldnames(fileData);
        dataVector = fileData.(dataField{1});
        
        % Since it's a single file, the "average" is the same as the original data
        averagedVector = dataVector;
        
        % Define the new file name
        newFileName = sprintf('AveragedModel_%s_%d.mat', type, index);
        newFilePath = fullfile(baseDir, newFileName);
        
        % Save the vector
        save(newFilePath, 'averagedVector');
    end
end

